[10:03:08] [ info] [             main] hello MA start
[10:03:08] [debug] [            train] Training initialized with score: -0.452883
[10:03:08] [debug] [            train] [1mTree  0[0m: receives pb 0.10 and will train on 66 instances
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.30, gain 0.00225, curr_depth 0, samples 66 ->(10,56)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.05, gain 0.00209, curr_depth 1, samples 10 ->(2,8)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.20, gain 0.00022, curr_depth 2, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.08, gain 0.00187, curr_depth 2, samples 8 ->(7,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.02, gain 0.00175, curr_depth 3, samples 7 ->(2,5)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.24, gain 0.00065, curr_depth 4, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.26, gain 0.00107, curr_depth 4, samples 5 ->(2,3)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.24, gain 0.00029, curr_depth 5, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.13, gain 0.00075, curr_depth 5, samples 3 ->(2,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.83, gain 0.00106, curr_depth 1, samples 56 ->(54,2)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.32, gain 0.00047, curr_depth 2, samples 54 ->(32,22)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00014, curr_depth 3, samples 32 ->(31,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00013, curr_depth 4, samples 31 ->(24,7)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00011, curr_depth 5, samples 24 ->(9,15)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (15)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.23, gain 0.00016, curr_depth 5, samples 7 ->(1,6)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.21, gain 0.00050, curr_depth 3, samples 22 ->(3,19)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00033, curr_depth 4, samples 3 ->(2,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00007, curr_depth 5, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.45, gain 0.00032, curr_depth 4, samples 19 ->(1,18)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.56, gain 0.00018, curr_depth 5, samples 18 ->(14,4)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (14)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00097, curr_depth 2, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:08] [debug] [            train] [1mTree  1[0m: receives pb 0.10 and will train on 66 instances
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00483, curr_depth 0, samples 66 ->(36,30)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.05, gain 0.00346, curr_depth 1, samples 36 ->(1,35)
[10:03:08] [debug] [    make_tree_DFS] max_depth (2) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.18, gain 0.00347, curr_depth 2, samples 35 ->(4,31)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.06, gain 0.00070, curr_depth 3, samples 4 ->(1,3)
[10:03:08] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00057, curr_depth 4, samples 3 ->(1,2)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00037, curr_depth 5, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00278, curr_depth 3, samples 31 ->(18,13)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00181, curr_depth 4, samples 18 ->(13,5)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.06, gain 0.00114, curr_depth 5, samples 13 ->(10,3)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (10)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00066, curr_depth 5, samples 5 ->(4,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.06, gain 0.00099, curr_depth 4, samples 13 ->(1,12)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00097, curr_depth 5, samples 12 ->(5,7)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00143, curr_depth 1, samples 30 ->(23,7)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.22, gain 0.00128, curr_depth 2, samples 23 ->(5,18)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.48, gain 0.00016, curr_depth 3, samples 5 ->(4,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00017, curr_depth 4, samples 4 ->(2,2)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.09, gain 0.00114, curr_depth 3, samples 18 ->(1,17)
[10:03:08] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.48, gain 0.00113, curr_depth 4, samples 17 ->(10,7)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.32, gain 0.00080, curr_depth 5, samples 10 ->(9,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.65, gain 0.00036, curr_depth 5, samples 7 ->(5,2)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00018, curr_depth 2, samples 7 ->(4,3)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00017, curr_depth 3, samples 4 ->(2,2)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.38, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00003, curr_depth 3, samples 3 ->(2,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 4, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:08] [debug] [            train] [1mTree  2[0m: receives pb 0.10 and will train on 66 instances
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.59, gain 0.00039, curr_depth 0, samples 66 ->(31,35)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.12, gain 0.00042, curr_depth 1, samples 31 ->(25,6)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.72, gain 0.00044, curr_depth 2, samples 25 ->(6,19)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00021, curr_depth 3, samples 6 ->(4,2)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.19, gain 0.00017, curr_depth 4, samples 4 ->(2,2)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.73, gain 0.00030, curr_depth 3, samples 19 ->(1,18)
[10:03:08] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.21, gain 0.00030, curr_depth 4, samples 18 ->(5,13)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00015, curr_depth 5, samples 5 ->(4,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.21, gain 0.00017, curr_depth 5, samples 13 ->(5,8)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.26, gain 0.00003, curr_depth 2, samples 6 ->(5,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00005, curr_depth 3, samples 5 ->(2,3)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.19, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00005, curr_depth 4, samples 3 ->(2,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00006, curr_depth 1, samples 35 ->(21,14)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00005, curr_depth 2, samples 21 ->(6,15)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.04, gain 0.00008, curr_depth 3, samples 6 ->(2,4)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 4, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00008, curr_depth 4, samples 4 ->(3,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00006, curr_depth 5, samples 3 ->(2,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00005, curr_depth 3, samples 15 ->(7,8)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00007, curr_depth 4, samples 7 ->(4,3)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00001, curr_depth 5, samples 4 ->(3,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00007, curr_depth 5, samples 3 ->(1,2)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.28, gain 0.00003, curr_depth 4, samples 8 ->(4,4)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00002, curr_depth 5, samples 4 ->(1,3)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.25, gain 0.00002, curr_depth 5, samples 4 ->(1,3)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.34, gain 0.00010, curr_depth 2, samples 14 ->(13,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.58, gain 0.00011, curr_depth 3, samples 13 ->(4,9)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00001, curr_depth 4, samples 4 ->(3,1)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.52, gain 0.00011, curr_depth 4, samples 9 ->(7,2)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.48, gain 0.00012, curr_depth 5, samples 7 ->(1,6)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:08] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:08] [debug] [            train] [1mTree  3[0m: receives pb 0.10 and will train on 66 instances
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:08] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.37, gain 0.00555, curr_depth 0, samples 66 ->(48,18)
[10:03:08] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00574, curr_depth 1, samples 48 ->(7,41)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00205, curr_depth 2, samples 7 ->(6,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.19, gain 0.00184, curr_depth 3, samples 6 ->(1,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.22, gain 0.00154, curr_depth 4, samples 5 ->(4,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.20, gain 0.00125, curr_depth 5, samples 4 ->(3,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00374, curr_depth 2, samples 41 ->(11,30)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.26, gain 0.00148, curr_depth 3, samples 11 ->(1,10)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.04, gain 0.00142, curr_depth 4, samples 10 ->(2,8)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00037, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.05, gain 0.00103, curr_depth 5, samples 8 ->(7,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.10, gain 0.00226, curr_depth 3, samples 30 ->(9,21)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.30, gain 0.00084, curr_depth 4, samples 9 ->(3,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00018, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00065, curr_depth 5, samples 6 ->(3,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.10, gain 0.00143, curr_depth 4, samples 21 ->(11,10)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.09, gain 0.00065, curr_depth 5, samples 11 ->(8,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.11, gain 0.00079, curr_depth 5, samples 10 ->(4,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00021, curr_depth 1, samples 18 ->(6,12)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.68, gain 0.00002, curr_depth 2, samples 6 ->(1,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00001, curr_depth 3, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.83, gain 0.00002, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.64, gain 0.00026, curr_depth 2, samples 12 ->(2,10)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.50, gain 0.00000, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.22, gain 0.00027, curr_depth 3, samples 10 ->(9,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.52, gain 0.00029, curr_depth 4, samples 9 ->(3,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00004, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 1.01, gain 0.00026, curr_depth 5, samples 6 ->(4,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree  4[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.17, gain 0.00082, curr_depth 0, samples 66 ->(11,55)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00049, curr_depth 1, samples 11 ->(7,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.40, gain 0.00014, curr_depth 2, samples 7 ->(6,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00014, curr_depth 3, samples 6 ->(1,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00011, curr_depth 4, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00009, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.12, gain 0.00035, curr_depth 2, samples 4 ->(2,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00022, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00012, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.26, gain 0.00041, curr_depth 1, samples 55 ->(47,8)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.26, gain 0.00044, curr_depth 2, samples 47 ->(43,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.32, gain 0.00033, curr_depth 3, samples 43 ->(6,37)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00003, curr_depth 4, samples 6 ->(4,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.60, gain 0.00003, curr_depth 5, samples 4 ->(3,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.25, gain 0.00033, curr_depth 4, samples 37 ->(33,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00036, curr_depth 5, samples 33 ->(22,11)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (22)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (11)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.03, gain 0.00001, curr_depth 5, samples 4 ->(3,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.45, gain 0.00014, curr_depth 3, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.46, gain 0.00014, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00002, curr_depth 2, samples 8 ->(5,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00001, curr_depth 3, samples 5 ->(4,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00001, curr_depth 4, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00001, curr_depth 3, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree  5[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00318, curr_depth 0, samples 66 ->(22,44)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.04, gain 0.00317, curr_depth 1, samples 22 ->(9,13)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.08, gain 0.00178, curr_depth 2, samples 9 ->(7,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00146, curr_depth 3, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.19, gain 0.00117, curr_depth 4, samples 6 ->(1,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00097, curr_depth 5, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00029, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.03, gain 0.00141, curr_depth 2, samples 13 ->(1,12)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.04, gain 0.00142, curr_depth 3, samples 12 ->(6,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00094, curr_depth 4, samples 6 ->(5,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.10, gain 0.00066, curr_depth 5, samples 5 ->(4,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.26, gain 0.00048, curr_depth 4, samples 6 ->(3,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.33, gain 0.00018, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.04, gain 0.00029, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.35, gain 0.00049, curr_depth 1, samples 44 ->(25,19)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.29, gain 0.00014, curr_depth 2, samples 25 ->(7,18)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00014, curr_depth 3, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00014, curr_depth 4, samples 6 ->(5,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00011, curr_depth 5, samples 5 ->(4,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.56, gain 0.00004, curr_depth 3, samples 18 ->(5,13)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00004, curr_depth 4, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.01, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00003, curr_depth 4, samples 13 ->(3,10)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.70, gain 0.00004, curr_depth 5, samples 10 ->(9,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.37, gain 0.00050, curr_depth 2, samples 19 ->(1,18)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.90, gain 0.00035, curr_depth 3, samples 18 ->(9,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.20, gain 0.00010, curr_depth 4, samples 9 ->(7,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00004, curr_depth 5, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00007, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.43, gain 0.00030, curr_depth 4, samples 9 ->(4,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00022, curr_depth 5, samples 4 ->(3,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.72, gain 0.00008, curr_depth 5, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [            train] [1mTree  6[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.07, gain 0.00246, curr_depth 0, samples 66 ->(26,40)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.08, gain 0.00204, curr_depth 1, samples 26 ->(2,24)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00004, curr_depth 2, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.07, gain 0.00203, curr_depth 2, samples 24 ->(3,21)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00049, curr_depth 3, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00037, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.07, gain 0.00157, curr_depth 3, samples 21 ->(5,16)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.07, gain 0.00020, curr_depth 4, samples 5 ->(4,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.22, gain 0.00021, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.08, gain 0.00144, curr_depth 4, samples 16 ->(9,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.06, gain 0.00111, curr_depth 5, samples 9 ->(7,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.28, gain 0.00036, curr_depth 5, samples 7 ->(2,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.70, gain 0.00058, curr_depth 1, samples 40 ->(38,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.35, gain 0.00062, curr_depth 2, samples 38 ->(1,37)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.38, gain 0.00064, curr_depth 3, samples 37 ->(26,11)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.11, gain 0.00060, curr_depth 4, samples 26 ->(21,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.50, gain 0.00039, curr_depth 5, samples 21 ->(19,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (19)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.13, gain 0.00025, curr_depth 5, samples 5 ->(4,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00007, curr_depth 4, samples 11 ->(2,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.58, gain 0.00004, curr_depth 5, samples 9 ->(1,8)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00011, curr_depth 2, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree  7[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.59, gain 0.00016, curr_depth 0, samples 66 ->(52,14)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00007, curr_depth 1, samples 52 ->(36,16)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.39, gain 0.00010, curr_depth 2, samples 36 ->(1,35)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.42, gain 0.00010, curr_depth 3, samples 35 ->(31,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.80, gain 0.00011, curr_depth 4, samples 31 ->(22,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.15, gain 0.00008, curr_depth 5, samples 22 ->(14,8)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (14)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00008, curr_depth 5, samples 9 ->(4,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00001, curr_depth 4, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00002, curr_depth 2, samples 16 ->(13,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00003, curr_depth 3, samples 13 ->(12,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00002, curr_depth 4, samples 12 ->(11,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.46, gain 0.00001, curr_depth 5, samples 11 ->(8,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00002, curr_depth 3, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00002, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00016, curr_depth 1, samples 14 ->(12,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00019, curr_depth 2, samples 12 ->(7,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00004, curr_depth 3, samples 7 ->(3,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00004, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.44, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00001, curr_depth 4, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00016, curr_depth 3, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.22, gain 0.00013, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00010, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.46, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00000, curr_depth 2, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree  8[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.14, gain 0.00117, curr_depth 0, samples 66 ->(1,65)
[10:03:09] [debug] [    make_tree_DFS] max_depth (1) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.53, gain 0.00110, curr_depth 1, samples 65 ->(46,19)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.26, gain 0.00025, curr_depth 2, samples 46 ->(21,25)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.50, gain 0.00029, curr_depth 3, samples 21 ->(10,11)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00004, curr_depth 4, samples 10 ->(3,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.28, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.48, gain 0.00006, curr_depth 5, samples 7 ->(6,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.57, gain 0.00029, curr_depth 4, samples 11 ->(7,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.51, gain 0.00014, curr_depth 5, samples 7 ->(2,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00018, curr_depth 5, samples 4 ->(3,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.69, gain 0.00005, curr_depth 3, samples 25 ->(20,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.49, gain 0.00006, curr_depth 4, samples 20 ->(18,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.31, gain 0.00004, curr_depth 5, samples 18 ->(11,7)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (11)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.54, gain 0.00001, curr_depth 4, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.22, gain 0.00099, curr_depth 2, samples 19 ->(15,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.74, gain 0.00054, curr_depth 3, samples 15 ->(14,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.81, gain 0.00057, curr_depth 4, samples 14 ->(8,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.76, gain 0.00023, curr_depth 5, samples 8 ->(7,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.96, gain 0.00040, curr_depth 5, samples 6 ->(5,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.25, gain 0.00064, curr_depth 3, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00062, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.75, gain 0.00034, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree  9[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00300, curr_depth 0, samples 66 ->(33,33)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.16, gain 0.00288, curr_depth 1, samples 33 ->(12,21)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00176, curr_depth 2, samples 12 ->(11,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.08, gain 0.00172, curr_depth 3, samples 11 ->(6,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00118, curr_depth 4, samples 6 ->(4,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.23, gain 0.00086, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00029, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00055, curr_depth 4, samples 5 ->(2,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.40, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.37, gain 0.00042, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00117, curr_depth 2, samples 21 ->(20,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.10, gain 0.00119, curr_depth 3, samples 20 ->(13,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00062, curr_depth 4, samples 13 ->(10,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.34, gain 0.00060, curr_depth 5, samples 10 ->(6,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00005, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.53, gain 0.00062, curr_depth 4, samples 7 ->(4,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.45, gain 0.00047, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00014, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00038, curr_depth 1, samples 33 ->(28,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.01, gain 0.00039, curr_depth 2, samples 28 ->(23,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00039, curr_depth 3, samples 23 ->(2,21)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.25, gain 0.00039, curr_depth 4, samples 21 ->(1,20)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.22, gain 0.00034, curr_depth 5, samples 20 ->(10,10)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (10)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (10)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00001, curr_depth 3, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 4, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.10, gain 0.00004, curr_depth 2, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00004, curr_depth 3, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00001, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 10[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00260, curr_depth 0, samples 66 ->(32,34)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.05, gain 0.00254, curr_depth 1, samples 32 ->(12,20)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00161, curr_depth 2, samples 12 ->(8,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.08, gain 0.00125, curr_depth 3, samples 8 ->(6,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00101, curr_depth 4, samples 6 ->(5,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.02, gain 0.00089, curr_depth 5, samples 5 ->(2,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.30, gain 0.00022, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.36, gain 0.00035, curr_depth 3, samples 4 ->(2,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.26, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00022, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00095, curr_depth 2, samples 20 ->(18,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.06, gain 0.00091, curr_depth 3, samples 18 ->(9,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.25, gain 0.00035, curr_depth 4, samples 9 ->(6,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.05, gain 0.00029, curr_depth 5, samples 6 ->(5,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00007, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00057, curr_depth 4, samples 9 ->(8,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.07, gain 0.00045, curr_depth 5, samples 8 ->(6,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00004, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.53, gain 0.00036, curr_depth 1, samples 34 ->(19,15)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.18, gain 0.00002, curr_depth 2, samples 19 ->(15,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.13, gain 0.00004, curr_depth 3, samples 15 ->(4,11)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 4, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.32, gain 0.00006, curr_depth 4, samples 11 ->(4,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00006, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.50, gain 0.00001, curr_depth 5, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.50, gain 0.00002, curr_depth 3, samples 4 ->(2,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00002, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.45, gain 0.00040, curr_depth 2, samples 15 ->(10,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.55, gain 0.00013, curr_depth 3, samples 10 ->(8,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00013, curr_depth 4, samples 8 ->(2,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.70, gain 0.00012, curr_depth 5, samples 6 ->(5,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.70, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.73, gain 0.00029, curr_depth 3, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.72, gain 0.00027, curr_depth 4, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00016, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 11[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.21, gain 0.00097, curr_depth 0, samples 66 ->(42,24)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.43, gain 0.00099, curr_depth 1, samples 42 ->(5,37)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.39, gain 0.00027, curr_depth 2, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00024, curr_depth 3, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.45, gain 0.00018, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.22, gain 0.00080, curr_depth 2, samples 37 ->(11,26)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00007, curr_depth 3, samples 11 ->(1,10)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00009, curr_depth 4, samples 10 ->(6,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.19, gain 0.00010, curr_depth 5, samples 6 ->(2,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00001, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.16, gain 0.00077, curr_depth 3, samples 26 ->(4,22)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.48, gain 0.00026, curr_depth 4, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00023, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.17, gain 0.00053, curr_depth 4, samples 22 ->(1,21)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.66, gain 0.00053, curr_depth 5, samples 21 ->(14,7)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (14)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.37, gain 0.00008, curr_depth 1, samples 24 ->(17,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.42, gain 0.00009, curr_depth 2, samples 17 ->(7,10)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.31, gain 0.00009, curr_depth 3, samples 7 ->(4,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.48, gain 0.00003, curr_depth 4, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00007, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.18, gain 0.00001, curr_depth 3, samples 10 ->(8,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.76, gain 0.00001, curr_depth 4, samples 8 ->(5,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.14, gain 0.00001, curr_depth 5, samples 5 ->(2,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.42, gain 0.00007, curr_depth 2, samples 7 ->(2,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.53, gain 0.00007, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.46, gain 0.00002, curr_depth 3, samples 5 ->(4,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 4, samples 4 ->(2,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 12[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.47, gain 0.00028, curr_depth 0, samples 66 ->(44,22)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.18, gain 0.00010, curr_depth 1, samples 44 ->(1,43)
[10:03:09] [debug] [    make_tree_DFS] max_depth (2) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00009, curr_depth 2, samples 43 ->(12,31)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.04, gain 0.00011, curr_depth 3, samples 12 ->(10,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00012, curr_depth 4, samples 10 ->(3,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00002, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00012, curr_depth 5, samples 7 ->(5,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.41, gain 0.00004, curr_depth 3, samples 31 ->(20,11)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.37, gain 0.00007, curr_depth 4, samples 20 ->(11,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.35, gain 0.00001, curr_depth 5, samples 11 ->(3,8)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.38, gain 0.00009, curr_depth 5, samples 9 ->(5,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00002, curr_depth 4, samples 11 ->(9,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00003, curr_depth 5, samples 9 ->(1,8)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00037, curr_depth 1, samples 22 ->(12,10)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.44, gain 0.00010, curr_depth 2, samples 12 ->(1,11)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.29, gain 0.00004, curr_depth 3, samples 11 ->(9,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.26, gain 0.00006, curr_depth 4, samples 9 ->(8,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00002, curr_depth 5, samples 8 ->(7,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00005, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00039, curr_depth 2, samples 10 ->(6,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.51, gain 0.00035, curr_depth 3, samples 6 ->(5,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.24, gain 0.00033, curr_depth 4, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00022, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00007, curr_depth 3, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00002, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 13[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.67, gain 0.00129, curr_depth 0, samples 66 ->(40,26)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.70, gain 0.00025, curr_depth 1, samples 40 ->(39,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.66, gain 0.00031, curr_depth 2, samples 39 ->(28,11)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00009, curr_depth 3, samples 28 ->(10,18)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00002, curr_depth 4, samples 10 ->(2,8)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.16, gain 0.00002, curr_depth 5, samples 8 ->(2,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.51, gain 0.00015, curr_depth 4, samples 18 ->(2,16)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.50, gain 0.00016, curr_depth 5, samples 16 ->(9,7)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.57, gain 0.00034, curr_depth 3, samples 11 ->(2,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00021, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.50, gain 0.00016, curr_depth 4, samples 9 ->(1,8)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00018, curr_depth 5, samples 8 ->(6,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (2) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.68, gain 0.00121, curr_depth 1, samples 26 ->(1,25)
[10:03:09] [debug] [    make_tree_DFS] max_depth (2) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 2.12, gain 0.00102, curr_depth 2, samples 25 ->(23,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.66, gain 0.00083, curr_depth 3, samples 23 ->(7,16)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.37, gain 0.00060, curr_depth 4, samples 7 ->(5,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00058, curr_depth 5, samples 5 ->(2,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.92, gain 0.00030, curr_depth 4, samples 16 ->(13,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.80, gain 0.00020, curr_depth 5, samples 13 ->(8,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00013, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00028, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 14[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.75, gain 0.00117, curr_depth 0, samples 66 ->(14,52)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.11, gain 0.00129, curr_depth 1, samples 14 ->(5,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00091, curr_depth 2, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.17, gain 0.00065, curr_depth 3, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.19, gain 0.00037, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00022, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00040, curr_depth 2, samples 9 ->(3,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00007, curr_depth 3, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00033, curr_depth 3, samples 6 ->(5,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00031, curr_depth 4, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.39, gain 0.00024, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.25, gain 0.00031, curr_depth 1, samples 52 ->(21,31)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.50, gain 0.00012, curr_depth 2, samples 21 ->(17,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.13, gain 0.00014, curr_depth 3, samples 17 ->(1,16)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.37, gain 0.00016, curr_depth 4, samples 16 ->(8,8)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00004, curr_depth 5, samples 8 ->(7,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00014, curr_depth 5, samples 8 ->(3,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00001, curr_depth 3, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00031, curr_depth 2, samples 31 ->(23,8)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00008, curr_depth 3, samples 23 ->(14,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.28, gain 0.00003, curr_depth 4, samples 14 ->(5,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00004, curr_depth 5, samples 5 ->(3,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00001, curr_depth 5, samples 9 ->(3,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.46, gain 0.00009, curr_depth 4, samples 9 ->(8,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.53, gain 0.00009, curr_depth 5, samples 8 ->(6,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.70, gain 0.00027, curr_depth 3, samples 8 ->(1,7)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.55, gain 0.00022, curr_depth 4, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.57, gain 0.00022, curr_depth 5, samples 6 ->(3,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [            train] [1mTree 15[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.16, gain 0.00158, curr_depth 0, samples 66 ->(20,46)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00135, curr_depth 1, samples 20 ->(8,12)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00077, curr_depth 2, samples 8 ->(1,7)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.04, gain 0.00071, curr_depth 3, samples 7 ->(4,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.20, gain 0.00035, curr_depth 4, samples 4 ->(2,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.34, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00035, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.39, gain 0.00057, curr_depth 2, samples 12 ->(1,11)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.10, gain 0.00056, curr_depth 3, samples 11 ->(1,10)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.31, gain 0.00045, curr_depth 4, samples 10 ->(1,9)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.33, gain 0.00043, curr_depth 5, samples 9 ->(4,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.18, gain 0.00037, curr_depth 1, samples 46 ->(40,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.42, gain 0.00041, curr_depth 2, samples 40 ->(1,39)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.23, gain 0.00044, curr_depth 3, samples 39 ->(32,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00049, curr_depth 4, samples 32 ->(26,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.16, gain 0.00029, curr_depth 5, samples 26 ->(23,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (23)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.13, gain 0.00027, curr_depth 5, samples 6 ->(4,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00002, curr_depth 4, samples 7 ->(2,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.41, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00001, curr_depth 5, samples 5 ->(4,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00004, curr_depth 2, samples 6 ->(4,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00004, curr_depth 3, samples 4 ->(2,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 16[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.47, gain 0.00090, curr_depth 0, samples 66 ->(64,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.28, gain 0.00033, curr_depth 1, samples 64 ->(25,39)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.41, gain 0.00010, curr_depth 2, samples 25 ->(1,24)
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.22, gain 0.00003, curr_depth 3, samples 24 ->(21,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.43, gain 0.00004, curr_depth 4, samples 21 ->(13,8)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00003, curr_depth 5, samples 13 ->(3,10)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (10)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.46, gain 0.00006, curr_depth 5, samples 8 ->(5,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00003, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00037, curr_depth 2, samples 39 ->(8,31)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.28, gain 0.00002, curr_depth 3, samples 8 ->(1,7)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.12, gain 0.00001, curr_depth 4, samples 7 ->(5,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.46, gain 0.00001, curr_depth 5, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.20, gain 0.00040, curr_depth 3, samples 31 ->(3,28)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00001, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.65, gain 0.00042, curr_depth 4, samples 28 ->(25,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.34, gain 0.00033, curr_depth 5, samples 25 ->(14,11)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (14)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (11)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00013, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00062, curr_depth 1, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (2) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (2) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 17[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.14, gain 0.00302, curr_depth 0, samples 66 ->(28,38)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.17, gain 0.00264, curr_depth 1, samples 28 ->(12,16)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.21, gain 0.00186, curr_depth 2, samples 12 ->(3,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.16, gain 0.00075, curr_depth 3, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.14, gain 0.00054, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.20, gain 0.00110, curr_depth 3, samples 9 ->(1,8)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.02, gain 0.00103, curr_depth 4, samples 8 ->(1,7)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00084, curr_depth 5, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00086, curr_depth 2, samples 16 ->(9,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.11, gain 0.00066, curr_depth 3, samples 9 ->(5,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.20, gain 0.00042, curr_depth 4, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00018, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.36, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00024, curr_depth 4, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.40, gain 0.00018, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00021, curr_depth 3, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00021, curr_depth 4, samples 6 ->(2,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.47, gain 0.00017, curr_depth 5, samples 4 ->(2,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.36, gain 0.00081, curr_depth 1, samples 38 ->(13,25)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.59, gain 0.00004, curr_depth 2, samples 13 ->(4,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.38, gain 0.00006, curr_depth 3, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.14, gain 0.00002, curr_depth 3, samples 9 ->(7,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00002, curr_depth 4, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00002, curr_depth 5, samples 6 ->(1,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.50, gain 0.00088, curr_depth 2, samples 25 ->(22,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.19, gain 0.00058, curr_depth 3, samples 22 ->(1,21)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.66, gain 0.00050, curr_depth 4, samples 21 ->(5,16)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.51, gain 0.00004, curr_depth 5, samples 5 ->(3,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00050, curr_depth 5, samples 16 ->(3,13)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (13)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00032, curr_depth 3, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.70, gain 0.00021, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 18[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.20, gain 0.00141, curr_depth 0, samples 66 ->(31,35)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00156, curr_depth 1, samples 31 ->(4,27)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00070, curr_depth 2, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00057, curr_depth 3, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.27, gain 0.00037, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.35, gain 0.00088, curr_depth 2, samples 27 ->(26,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00089, curr_depth 3, samples 26 ->(4,22)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00007, curr_depth 4, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00007, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.09, gain 0.00085, curr_depth 4, samples 22 ->(8,14)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.15, gain 0.00046, curr_depth 5, samples 8 ->(3,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00040, curr_depth 5, samples 14 ->(1,13)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (13)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.39, gain 0.00022, curr_depth 1, samples 35 ->(27,8)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.43, gain 0.00005, curr_depth 2, samples 27 ->(13,14)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.19, gain 0.00008, curr_depth 3, samples 13 ->(9,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.77, gain 0.00003, curr_depth 4, samples 9 ->(2,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00002, curr_depth 5, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.21, gain 0.00009, curr_depth 4, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00009, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00005, curr_depth 3, samples 14 ->(3,11)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00005, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.34, gain 0.00002, curr_depth 4, samples 11 ->(9,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.06, gain 0.00001, curr_depth 5, samples 9 ->(4,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.35, gain 0.00029, curr_depth 2, samples 8 ->(2,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00022, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.76, gain 0.00009, curr_depth 3, samples 6 ->(3,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.67, gain 0.00001, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.70, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00009, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 19[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00495, curr_depth 0, samples 66 ->(52,14)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00164, curr_depth 1, samples 52 ->(16,36)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.01, gain 0.00179, curr_depth 2, samples 16 ->(3,13)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.18, gain 0.00086, curr_depth 3, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.13, gain 0.00065, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00097, curr_depth 3, samples 13 ->(12,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00099, curr_depth 4, samples 12 ->(6,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.04, gain 0.00067, curr_depth 5, samples 6 ->(2,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00033, curr_depth 5, samples 6 ->(4,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.43, gain 0.00017, curr_depth 2, samples 36 ->(14,22)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00018, curr_depth 3, samples 14 ->(1,13)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00021, curr_depth 4, samples 13 ->(4,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00019, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.39, gain 0.00006, curr_depth 5, samples 9 ->(5,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.08, gain 0.00006, curr_depth 3, samples 22 ->(1,21)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.10, gain 0.00005, curr_depth 4, samples 21 ->(3,18)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00003, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.31, gain 0.00007, curr_depth 5, samples 18 ->(14,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (14)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.22, gain 0.00546, curr_depth 1, samples 14 ->(13,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00303, curr_depth 2, samples 13 ->(3,10)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00154, curr_depth 3, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00073, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.53, gain 0.00185, curr_depth 3, samples 10 ->(7,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.59, gain 0.00056, curr_depth 4, samples 7 ->(2,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00056, curr_depth 5, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.68, gain 0.00142, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00111, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (2) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 20[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.01310, curr_depth 0, samples 66 ->(34,32)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00202, curr_depth 1, samples 34 ->(14,20)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.01, gain 0.00200, curr_depth 2, samples 14 ->(2,12)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.17, gain 0.00045, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00153, curr_depth 3, samples 12 ->(2,10)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.29, gain 0.00037, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00114, curr_depth 4, samples 10 ->(5,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.04, gain 0.00066, curr_depth 5, samples 5 ->(4,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00047, curr_depth 5, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.42, gain 0.00022, curr_depth 2, samples 20 ->(5,15)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00025, curr_depth 3, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00026, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.34, gain 0.00008, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00002, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00034, curr_depth 3, samples 15 ->(14,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00041, curr_depth 4, samples 14 ->(10,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.37, gain 0.00062, curr_depth 5, samples 10 ->(6,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00002, curr_depth 5, samples 4 ->(3,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.49, gain 0.01374, curr_depth 1, samples 32 ->(22,10)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.28, gain 0.00574, curr_depth 2, samples 22 ->(18,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.34, gain 0.00594, curr_depth 3, samples 18 ->(6,12)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.42, gain 0.00087, curr_depth 4, samples 6 ->(2,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00054, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.93, gain 0.00035, curr_depth 5, samples 4 ->(2,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.45, gain 0.00558, curr_depth 4, samples 12 ->(3,9)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00298, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00269, curr_depth 5, samples 9 ->(3,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00017, curr_depth 3, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00018, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00016, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00946, curr_depth 2, samples 10 ->(2,8)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00475, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00468, curr_depth 3, samples 8 ->(1,7)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00459, curr_depth 4, samples 7 ->(3,4)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00138, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.58, gain 0.00316, curr_depth 5, samples 4 ->(2,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [            train] [1mTree 21[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.27, gain 0.00628, curr_depth 0, samples 66 ->(33,33)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.20, gain 0.00040, curr_depth 1, samples 33 ->(26,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.22, gain 0.00037, curr_depth 2, samples 26 ->(4,22)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.08, gain 0.00030, curr_depth 3, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00018, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.12, gain 0.00020, curr_depth 3, samples 22 ->(3,19)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00007, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00007, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.07, gain 0.00020, curr_depth 4, samples 19 ->(3,16)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00014, curr_depth 5, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.15, gain 0.00010, curr_depth 5, samples 16 ->(1,15)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (15)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00027, curr_depth 2, samples 7 ->(5,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00013, curr_depth 3, samples 5 ->(2,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00001, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00013, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00010, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00022, curr_depth 3, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.90, gain 0.00650, curr_depth 1, samples 33 ->(8,25)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00073, curr_depth 2, samples 8 ->(5,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00069, curr_depth 3, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00032, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00021, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00034, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00010, curr_depth 3, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.25, gain 0.00623, curr_depth 2, samples 25 ->(11,14)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00435, curr_depth 3, samples 11 ->(8,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.25, gain 0.00245, curr_depth 4, samples 8 ->(7,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.33, gain 0.00169, curr_depth 5, samples 7 ->(2,5)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00197, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00097, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.57, gain 0.00206, curr_depth 3, samples 14 ->(13,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00208, curr_depth 4, samples 13 ->(7,6)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00079, curr_depth 5, samples 7 ->(1,6)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00139, curr_depth 5, samples 6 ->(2,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:09] [debug] [            train] [1mTree 22[0m: receives pb 0.10 and will train on 66 instances
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.13, gain 0.01065, curr_depth 0, samples 66 ->(28,38)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00077, curr_depth 1, samples 28 ->(8,20)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00071, curr_depth 2, samples 8 ->(7,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00065, curr_depth 3, samples 7 ->(4,3)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00031, curr_depth 4, samples 4 ->(3,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00029, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.33, gain 0.00035, curr_depth 4, samples 3 ->(2,1)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.14, gain 0.00028, curr_depth 2, samples 20 ->(15,5)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00008, curr_depth 3, samples 15 ->(5,10)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.31, gain 0.00009, curr_depth 4, samples 5 ->(1,4)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00010, curr_depth 5, samples 4 ->(1,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.14, gain 0.00009, curr_depth 4, samples 10 ->(3,7)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00012, curr_depth 5, samples 3 ->(2,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.12, gain 0.00004, curr_depth 5, samples 7 ->(4,3)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.17, gain 0.00031, curr_depth 3, samples 5 ->(3,2)
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00027, curr_depth 4, samples 3 ->(1,2)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00021, curr_depth 5, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:09] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:09] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.25, gain 0.01177, curr_depth 1, samples 38 ->(14,24)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00135, curr_depth 2, samples 14 ->(5,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.20, gain 0.00099, curr_depth 3, samples 5 ->(2,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00016, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00082, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00062, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.20, gain 0.00051, curr_depth 3, samples 9 ->(8,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.43, gain 0.00034, curr_depth 4, samples 8 ->(2,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00036, curr_depth 5, samples 6 ->(4,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.01099, curr_depth 2, samples 24 ->(3,21)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00036, curr_depth 3, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00036, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.72, gain 0.01095, curr_depth 3, samples 21 ->(20,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.41, gain 0.00963, curr_depth 4, samples 20 ->(1,19)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00833, curr_depth 5, samples 19 ->(2,17)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (17)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 23[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00805, curr_depth 0, samples 66 ->(24,42)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.22, gain 0.00086, curr_depth 1, samples 24 ->(4,20)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00082, curr_depth 2, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.17, gain 0.00076, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.16, gain 0.00037, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.11, gain 0.00018, curr_depth 2, samples 20 ->(11,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00006, curr_depth 3, samples 11 ->(8,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00005, curr_depth 4, samples 8 ->(1,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00008, curr_depth 5, samples 7 ->(6,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.31, gain 0.00005, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.45, gain 0.00025, curr_depth 3, samples 9 ->(6,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00028, curr_depth 4, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.34, gain 0.00028, curr_depth 5, samples 5 ->(3,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.19, gain 0.00883, curr_depth 1, samples 42 ->(34,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.10, gain 0.00516, curr_depth 2, samples 34 ->(4,30)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00205, curr_depth 3, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00164, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00099, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.37, gain 0.00326, curr_depth 3, samples 30 ->(17,13)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.46, gain 0.00127, curr_depth 4, samples 17 ->(15,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.77, gain 0.00136, curr_depth 5, samples 15 ->(11,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (11)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00226, curr_depth 4, samples 13 ->(1,12)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00180, curr_depth 5, samples 12 ->(10,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (10)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.20, gain 0.00428, curr_depth 2, samples 8 ->(4,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00152, curr_depth 3, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00036, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00111, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00286, curr_depth 3, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.20, gain 0.00244, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00174, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 24[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.19, gain 0.00807, curr_depth 0, samples 66 ->(34,32)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00134, curr_depth 1, samples 34 ->(8,26)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.09, gain 0.00134, curr_depth 2, samples 8 ->(5,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.06, gain 0.00097, curr_depth 3, samples 5 ->(2,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.20, gain 0.00045, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.23, gain 0.00049, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00037, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00035, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.19, gain 0.00022, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.44, gain 0.00022, curr_depth 2, samples 26 ->(16,10)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.19, gain 0.00011, curr_depth 3, samples 16 ->(4,12)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00010, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00010, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.06, gain 0.00010, curr_depth 4, samples 12 ->(3,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00010, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00008, curr_depth 5, samples 9 ->(4,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.11, gain 0.00019, curr_depth 3, samples 10 ->(2,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.14, gain 0.00024, curr_depth 4, samples 8 ->(5,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00025, curr_depth 5, samples 5 ->(3,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00002, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.28, gain 0.00848, curr_depth 1, samples 32 ->(19,13)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.30, gain 0.00272, curr_depth 2, samples 19 ->(15,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.22, gain 0.00262, curr_depth 3, samples 15 ->(4,11)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00043, curr_depth 4, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00034, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00007, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.13, gain 0.00226, curr_depth 4, samples 11 ->(2,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00021, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.41, gain 0.00205, curr_depth 5, samples 9 ->(6,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00017, curr_depth 3, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00002, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00016, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00630, curr_depth 2, samples 13 ->(3,10)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00310, curr_depth 3, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00254, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.09, gain 0.00351, curr_depth 3, samples 10 ->(2,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.31, gain 0.00359, curr_depth 4, samples 8 ->(4,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00268, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00091, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 25[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.16, gain 0.00327, curr_depth 0, samples 66 ->(24,42)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.25, gain 0.00270, curr_depth 1, samples 24 ->(11,13)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00214, curr_depth 2, samples 11 ->(7,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00165, curr_depth 3, samples 7 ->(4,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.05, gain 0.00105, curr_depth 4, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.20, gain 0.00084, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00057, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.21, gain 0.00037, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00047, curr_depth 3, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.30, gain 0.00035, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.29, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.29, gain 0.00063, curr_depth 2, samples 13 ->(4,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00008, curr_depth 3, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00008, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.31, gain 0.00060, curr_depth 3, samples 9 ->(3,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00035, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.37, gain 0.00025, curr_depth 4, samples 6 ->(4,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.32, gain 0.00021, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.25, gain 0.00128, curr_depth 1, samples 42 ->(9,33)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.19, gain 0.00118, curr_depth 2, samples 9 ->(3,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00007, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00007, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.48, gain 0.00116, curr_depth 3, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.25, gain 0.00112, curr_depth 4, samples 5 ->(4,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.38, gain 0.00100, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.35, gain 0.00085, curr_depth 2, samples 33 ->(19,14)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.25, gain 0.00010, curr_depth 3, samples 19 ->(8,11)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.53, gain 0.00011, curr_depth 4, samples 8 ->(1,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00013, curr_depth 5, samples 7 ->(4,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00009, curr_depth 4, samples 11 ->(3,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00009, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00004, curr_depth 5, samples 8 ->(5,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00126, curr_depth 3, samples 14 ->(1,13)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.44, gain 0.00076, curr_depth 4, samples 13 ->(7,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.44, gain 0.00004, curr_depth 5, samples 7 ->(6,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.54, gain 0.00077, curr_depth 5, samples 6 ->(2,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [            train] [1mTree 26[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.26, gain 0.00234, curr_depth 0, samples 66 ->(43,23)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00245, curr_depth 1, samples 43 ->(18,25)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.13, gain 0.00158, curr_depth 2, samples 18 ->(16,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.06, gain 0.00150, curr_depth 3, samples 16 ->(2,14)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00138, curr_depth 4, samples 14 ->(13,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.42, gain 0.00132, curr_depth 5, samples 13 ->(8,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00008, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.34, gain 0.00091, curr_depth 2, samples 25 ->(1,24)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.20, gain 0.00093, curr_depth 3, samples 24 ->(12,12)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00064, curr_depth 4, samples 12 ->(10,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00041, curr_depth 5, samples 10 ->(7,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.19, gain 0.00033, curr_depth 4, samples 12 ->(4,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00005, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.93, gain 0.00029, curr_depth 5, samples 8 ->(4,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.36, gain 0.00011, curr_depth 1, samples 23 ->(18,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.03, gain 0.00007, curr_depth 2, samples 18 ->(1,17)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.32, gain 0.00007, curr_depth 3, samples 17 ->(14,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.34, gain 0.00008, curr_depth 4, samples 14 ->(12,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.27, gain 0.00005, curr_depth 5, samples 12 ->(8,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00001, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00011, curr_depth 2, samples 5 ->(4,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00011, curr_depth 3, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00006, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.18, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 27[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.26, gain 0.00204, curr_depth 0, samples 66 ->(51,15)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.53, gain 0.00230, curr_depth 1, samples 51 ->(18,33)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00182, curr_depth 2, samples 18 ->(6,12)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.29, gain 0.00103, curr_depth 3, samples 6 ->(3,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.22, gain 0.00065, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00037, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.33, gain 0.00035, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00081, curr_depth 3, samples 12 ->(1,11)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.11, gain 0.00079, curr_depth 4, samples 11 ->(6,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00037, curr_depth 5, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00041, curr_depth 5, samples 5 ->(3,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.21, gain 0.00058, curr_depth 2, samples 33 ->(27,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00056, curr_depth 3, samples 27 ->(24,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00055, curr_depth 4, samples 24 ->(17,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.43, gain 0.00030, curr_depth 5, samples 17 ->(15,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (15)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.45, gain 0.00027, curr_depth 5, samples 7 ->(4,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00003, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.25, gain 0.00004, curr_depth 3, samples 6 ->(5,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00001, curr_depth 4, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00001, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.49, gain 0.00025, curr_depth 1, samples 15 ->(9,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00001, curr_depth 2, samples 9 ->(7,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.25, gain 0.00002, curr_depth 3, samples 7 ->(3,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00001, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00002, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00002, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.53, gain 0.00033, curr_depth 2, samples 6 ->(4,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00033, curr_depth 3, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00021, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00010, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00000, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 28[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00239, curr_depth 0, samples 66 ->(32,34)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.04, gain 0.00270, curr_depth 1, samples 32 ->(8,24)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00172, curr_depth 2, samples 8 ->(3,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.21, gain 0.00095, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.19, gain 0.00065, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.03, gain 0.00074, curr_depth 3, samples 5 ->(2,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.29, gain 0.00037, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.34, gain 0.00035, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.34, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.31, gain 0.00104, curr_depth 2, samples 24 ->(10,14)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00059, curr_depth 3, samples 10 ->(9,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00057, curr_depth 4, samples 9 ->(2,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00008, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00048, curr_depth 5, samples 7 ->(2,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.32, gain 0.00047, curr_depth 3, samples 14 ->(7,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00016, curr_depth 4, samples 7 ->(6,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.40, gain 0.00014, curr_depth 5, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.45, gain 0.00031, curr_depth 4, samples 7 ->(3,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00018, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00013, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.51, gain 0.00039, curr_depth 1, samples 34 ->(25,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.34, gain 0.00007, curr_depth 2, samples 25 ->(17,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.48, gain 0.00006, curr_depth 3, samples 17 ->(2,15)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00002, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.49, gain 0.00007, curr_depth 4, samples 15 ->(2,13)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.37, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.46, gain 0.00004, curr_depth 5, samples 13 ->(4,9)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.30, gain 0.00006, curr_depth 3, samples 8 ->(6,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.66, gain 0.00006, curr_depth 4, samples 6 ->(4,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.50, gain 0.00002, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.67, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.68, gain 0.00042, curr_depth 2, samples 9 ->(4,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.68, gain 0.00033, curr_depth 3, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00021, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.68, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.70, gain 0.00011, curr_depth 3, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.57, gain 0.00011, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00006, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 29[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00080, curr_depth 0, samples 66 ->(4,62)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00082, curr_depth 1, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.24, gain 0.00075, curr_depth 2, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00054, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (2) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.41, gain 0.00021, curr_depth 1, samples 62 ->(7,55)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00014, curr_depth 2, samples 7 ->(1,6)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00009, curr_depth 3, samples 6 ->(5,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.38, gain 0.00010, curr_depth 4, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00009, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00014, curr_depth 2, samples 55 ->(36,19)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.17, gain 0.00005, curr_depth 3, samples 36 ->(14,22)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.25, gain 0.00006, curr_depth 4, samples 14 ->(9,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00003, curr_depth 5, samples 9 ->(7,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.45, gain 0.00006, curr_depth 5, samples 5 ->(3,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.46, gain 0.00007, curr_depth 4, samples 22 ->(6,16)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.44, gain 0.00007, curr_depth 5, samples 6 ->(2,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00005, curr_depth 5, samples 16 ->(3,13)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (13)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.79, gain 0.00020, curr_depth 3, samples 19 ->(15,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.40, gain 0.00025, curr_depth 4, samples 15 ->(11,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00011, curr_depth 5, samples 11 ->(9,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.20, gain 0.00019, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.40, gain 0.00001, curr_depth 4, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 30[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00210, curr_depth 0, samples 66 ->(39,27)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.12, gain 0.00235, curr_depth 1, samples 39 ->(15,24)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.06, gain 0.00178, curr_depth 2, samples 15 ->(9,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.09, gain 0.00132, curr_depth 3, samples 9 ->(8,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00125, curr_depth 4, samples 8 ->(3,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00058, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.09, gain 0.00068, curr_depth 5, samples 5 ->(4,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.28, gain 0.00047, curr_depth 3, samples 6 ->(2,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00035, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00028, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.12, gain 0.00062, curr_depth 2, samples 24 ->(7,17)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00032, curr_depth 3, samples 7 ->(3,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.36, gain 0.00007, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.40, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00024, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.45, gain 0.00018, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00032, curr_depth 3, samples 17 ->(16,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00027, curr_depth 4, samples 16 ->(1,15)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00027, curr_depth 5, samples 15 ->(1,14)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (14)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00022, curr_depth 1, samples 27 ->(16,11)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.51, gain 0.00003, curr_depth 2, samples 16 ->(8,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.31, gain 0.00003, curr_depth 3, samples 8 ->(7,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00002, curr_depth 4, samples 7 ->(2,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 5 ->(4,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.59, gain 0.00001, curr_depth 3, samples 8 ->(1,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.34, gain 0.00001, curr_depth 4, samples 7 ->(6,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 6 ->(5,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.19, gain 0.00023, curr_depth 2, samples 11 ->(10,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00023, curr_depth 3, samples 10 ->(1,9)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.64, gain 0.00018, curr_depth 4, samples 9 ->(2,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.72, gain 0.00017, curr_depth 5, samples 7 ->(1,6)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 31[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00028, curr_depth 0, samples 66 ->(24,42)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.24, gain 0.00024, curr_depth 1, samples 24 ->(20,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.78, gain 0.00025, curr_depth 2, samples 20 ->(16,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00018, curr_depth 3, samples 16 ->(15,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.17, gain 0.00018, curr_depth 4, samples 15 ->(4,11)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00009, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.11, gain 0.00011, curr_depth 5, samples 11 ->(1,10)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (10)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00009, curr_depth 3, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00007, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.43, gain 0.00004, curr_depth 2, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00002, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00002, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.97, gain 0.00013, curr_depth 1, samples 42 ->(13,29)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.44, gain 0.00003, curr_depth 2, samples 13 ->(3,10)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00004, curr_depth 3, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00003, curr_depth 3, samples 10 ->(6,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00004, curr_depth 4, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.59, gain 0.00001, curr_depth 5, samples 5 ->(4,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.93, gain 0.00001, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.50, gain 0.00019, curr_depth 2, samples 29 ->(24,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00021, curr_depth 3, samples 24 ->(5,19)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00001, curr_depth 4, samples 5 ->(4,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00022, curr_depth 4, samples 19 ->(15,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.46, gain 0.00014, curr_depth 5, samples 15 ->(3,12)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (12)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00014, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.51, gain 0.00006, curr_depth 3, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00002, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.62, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 32[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.14, gain 0.00164, curr_depth 0, samples 66 ->(22,44)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.26, gain 0.00089, curr_depth 1, samples 22 ->(3,19)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00051, curr_depth 2, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00022, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00044, curr_depth 2, samples 19 ->(11,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00040, curr_depth 3, samples 11 ->(6,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.43, gain 0.00030, curr_depth 4, samples 6 ->(4,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.28, gain 0.00012, curr_depth 5, samples 4 ->(2,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00017, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00011, curr_depth 4, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.49, gain 0.00009, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00005, curr_depth 3, samples 8 ->(1,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.53, gain 0.00004, curr_depth 4, samples 7 ->(6,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00002, curr_depth 5, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.41, gain 0.00128, curr_depth 1, samples 44 ->(36,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.30, gain 0.00046, curr_depth 2, samples 36 ->(18,18)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00012, curr_depth 3, samples 18 ->(15,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.30, gain 0.00014, curr_depth 4, samples 15 ->(13,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00016, curr_depth 5, samples 13 ->(4,9)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.19, gain 0.00003, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00046, curr_depth 3, samples 18 ->(1,17)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.58, gain 0.00052, curr_depth 4, samples 17 ->(3,14)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.66, gain 0.00027, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.19, gain 0.00028, curr_depth 5, samples 14 ->(9,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.73, gain 0.00092, curr_depth 2, samples 8 ->(6,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00082, curr_depth 3, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00077, curr_depth 4, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.72, gain 0.00050, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00010, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 33[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00071, curr_depth 0, samples 66 ->(20,46)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.06, gain 0.00056, curr_depth 1, samples 20 ->(3,17)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.42, gain 0.00029, curr_depth 2, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.40, gain 0.00022, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.31, gain 0.00033, curr_depth 2, samples 17 ->(15,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00034, curr_depth 3, samples 15 ->(8,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.11, gain 0.00011, curr_depth 4, samples 8 ->(5,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.15, gain 0.00005, curr_depth 5, samples 5 ->(3,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.45, gain 0.00007, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.24, gain 0.00023, curr_depth 4, samples 7 ->(3,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00014, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00009, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00002, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.34, gain 0.00035, curr_depth 1, samples 46 ->(25,21)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.20, gain 0.00007, curr_depth 2, samples 25 ->(12,13)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00011, curr_depth 3, samples 12 ->(8,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.88, gain 0.00003, curr_depth 4, samples 8 ->(6,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.27, gain 0.00004, curr_depth 5, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.87, gain 0.00011, curr_depth 4, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00006, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00003, curr_depth 3, samples 13 ->(12,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00003, curr_depth 4, samples 12 ->(1,11)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00003, curr_depth 5, samples 11 ->(4,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.36, gain 0.00037, curr_depth 2, samples 21 ->(4,17)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00020, curr_depth 3, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00016, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.47, gain 0.00020, curr_depth 3, samples 17 ->(14,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.44, gain 0.00014, curr_depth 4, samples 14 ->(2,12)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.40, gain 0.00015, curr_depth 5, samples 12 ->(5,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00009, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.68, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 34[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00217, curr_depth 0, samples 66 ->(22,44)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.30, gain 0.00233, curr_depth 1, samples 22 ->(8,14)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.02, gain 0.00167, curr_depth 2, samples 8 ->(6,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.05, gain 0.00135, curr_depth 3, samples 6 ->(3,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.22, gain 0.00075, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.20, gain 0.00054, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.18, gain 0.00057, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.22, gain 0.00037, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00029, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.34, gain 0.00079, curr_depth 2, samples 14 ->(1,13)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00079, curr_depth 3, samples 13 ->(2,11)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00024, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.46, gain 0.00056, curr_depth 4, samples 11 ->(10,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00045, curr_depth 5, samples 10 ->(9,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.44, gain 0.00092, curr_depth 1, samples 44 ->(40,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.23, gain 0.00012, curr_depth 2, samples 40 ->(21,19)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.19, gain 0.00007, curr_depth 3, samples 21 ->(12,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00003, curr_depth 4, samples 12 ->(3,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00003, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.19, gain 0.00002, curr_depth 5, samples 9 ->(8,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.40, gain 0.00013, curr_depth 4, samples 9 ->(5,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00002, curr_depth 5, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00013, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00016, curr_depth 3, samples 19 ->(4,15)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00016, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00006, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00007, curr_depth 4, samples 15 ->(9,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.20, gain 0.00003, curr_depth 5, samples 9 ->(3,6)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.51, gain 0.00008, curr_depth 5, samples 6 ->(4,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00122, curr_depth 2, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.73, gain 0.00030, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00028, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 35[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.92, gain 0.00634, curr_depth 0, samples 66 ->(43,23)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.11, gain 0.00121, curr_depth 1, samples 43 ->(19,24)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.36, gain 0.00098, curr_depth 2, samples 19 ->(17,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.05, gain 0.00103, curr_depth 3, samples 17 ->(8,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00074, curr_depth 4, samples 8 ->(5,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.20, gain 0.00034, curr_depth 5, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00042, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.34, gain 0.00035, curr_depth 4, samples 9 ->(2,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.13, gain 0.00038, curr_depth 5, samples 7 ->(6,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00002, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00056, curr_depth 2, samples 24 ->(3,21)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.48, gain 0.00047, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00043, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.29, gain 0.00034, curr_depth 3, samples 21 ->(12,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00008, curr_depth 4, samples 12 ->(8,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00007, curr_depth 5, samples 8 ->(2,6)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.63, gain 0.00008, curr_depth 5, samples 4 ->(2,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.32, gain 0.00074, curr_depth 4, samples 9 ->(4,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00074, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00008, curr_depth 5, samples 5 ->(2,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.69, gain 0.00739, curr_depth 1, samples 23 ->(21,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.44, gain 0.00473, curr_depth 2, samples 21 ->(2,19)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00158, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00329, curr_depth 3, samples 19 ->(9,10)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00105, curr_depth 4, samples 9 ->(5,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00106, curr_depth 5, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00006, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00264, curr_depth 4, samples 10 ->(4,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00179, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.71, gain 0.00099, curr_depth 5, samples 6 ->(5,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.67, gain 0.00297, curr_depth 2, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 36[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00799, curr_depth 0, samples 66 ->(17,49)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00043, curr_depth 1, samples 17 ->(6,11)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.30, gain 0.00046, curr_depth 2, samples 6 ->(2,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00029, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00019, curr_depth 3, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00002, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00017, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.45, gain 0.00013, curr_depth 2, samples 11 ->(9,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00012, curr_depth 3, samples 9 ->(8,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.37, gain 0.00007, curr_depth 4, samples 8 ->(2,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.31, gain 0.00007, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00001, curr_depth 5, samples 6 ->(2,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00008, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.28, gain 0.00832, curr_depth 1, samples 49 ->(19,30)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.12, gain 0.00174, curr_depth 2, samples 19 ->(7,12)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.38, gain 0.00164, curr_depth 3, samples 7 ->(4,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.17, gain 0.00023, curr_depth 4, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00021, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00142, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00111, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00056, curr_depth 3, samples 12 ->(11,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.11, gain 0.00062, curr_depth 4, samples 11 ->(1,10)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.49, gain 0.00064, curr_depth 5, samples 10 ->(3,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00716, curr_depth 2, samples 30 ->(17,13)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.55, gain 0.00272, curr_depth 3, samples 17 ->(16,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00197, curr_depth 4, samples 16 ->(8,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00074, curr_depth 5, samples 8 ->(6,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.32, gain 0.00128, curr_depth 5, samples 8 ->(7,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00472, curr_depth 3, samples 13 ->(9,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.91, gain 0.00390, curr_depth 4, samples 9 ->(2,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00036, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.39, gain 0.00356, curr_depth 5, samples 7 ->(4,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.48, gain 0.00091, curr_depth 4, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.67, gain 0.00053, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 37[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.20, gain 0.00866, curr_depth 0, samples 66 ->(30,36)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00135, curr_depth 1, samples 30 ->(3,27)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.17, gain 0.00051, curr_depth 2, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.26, gain 0.00024, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.11, gain 0.00105, curr_depth 2, samples 27 ->(9,18)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.06, gain 0.00008, curr_depth 3, samples 9 ->(5,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.08, gain 0.00002, curr_depth 4, samples 5 ->(4,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.26, gain 0.00001, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.40, gain 0.00013, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00013, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.48, gain 0.00119, curr_depth 3, samples 18 ->(10,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.16, gain 0.00117, curr_depth 4, samples 10 ->(7,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.11, gain 0.00048, curr_depth 5, samples 7 ->(2,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00075, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.49, gain 0.00017, curr_depth 4, samples 8 ->(1,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.71, gain 0.00022, curr_depth 5, samples 7 ->(6,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.49, gain 0.00905, curr_depth 1, samples 36 ->(31,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.38, gain 0.00550, curr_depth 2, samples 31 ->(14,17)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.81, gain 0.00179, curr_depth 3, samples 14 ->(7,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.69, gain 0.00155, curr_depth 4, samples 7 ->(3,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00052, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00121, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00032, curr_depth 4, samples 7 ->(2,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00029, curr_depth 5, samples 5 ->(4,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00407, curr_depth 3, samples 17 ->(10,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.52, gain 0.00162, curr_depth 4, samples 10 ->(9,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.23, gain 0.00164, curr_depth 5, samples 9 ->(4,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.52, gain 0.00254, curr_depth 4, samples 7 ->(4,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.38, gain 0.00178, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00075, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00391, curr_depth 2, samples 5 ->(4,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00211, curr_depth 3, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00062, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00140, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 38[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.47, gain 0.00815, curr_depth 0, samples 66 ->(31,35)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.05, gain 0.00114, curr_depth 1, samples 31 ->(9,22)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00115, curr_depth 2, samples 9 ->(4,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00077, curr_depth 3, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00057, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.19, gain 0.00037, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.29, gain 0.00038, curr_depth 3, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.08, gain 0.00035, curr_depth 4, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00020, curr_depth 2, samples 22 ->(13,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.31, gain 0.00028, curr_depth 3, samples 13 ->(10,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.33, gain 0.00010, curr_depth 4, samples 10 ->(2,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.23, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.06, gain 0.00010, curr_depth 5, samples 8 ->(5,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.30, gain 0.00023, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.39, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00011, curr_depth 3, samples 9 ->(6,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.11, gain 0.00010, curr_depth 4, samples 6 ->(3,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00002, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00009, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.37, gain 0.00005, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.26, gain 0.00843, curr_depth 1, samples 35 ->(19,16)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.17, gain 0.00231, curr_depth 2, samples 19 ->(12,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.38, gain 0.00229, curr_depth 3, samples 12 ->(8,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00102, curr_depth 4, samples 8 ->(1,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.22, gain 0.00066, curr_depth 5, samples 7 ->(6,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.40, gain 0.00135, curr_depth 4, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00072, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.13, gain 0.00022, curr_depth 3, samples 7 ->(3,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00029, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00028, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00001, curr_depth 4, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.13, gain 0.00692, curr_depth 2, samples 16 ->(2,14)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00011, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.44, gain 0.00718, curr_depth 3, samples 14 ->(5,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00415, curr_depth 4, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00345, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.34, gain 0.00313, curr_depth 4, samples 9 ->(4,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00069, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00262, curr_depth 5, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [            train] [1mTree 39[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.59, gain 0.00273, curr_depth 0, samples 66 ->(41,25)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.38, gain 0.00305, curr_depth 1, samples 41 ->(16,25)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.25, gain 0.00242, curr_depth 2, samples 16 ->(3,13)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.21, gain 0.00095, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.17, gain 0.00065, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.28, gain 0.00145, curr_depth 3, samples 13 ->(8,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00103, curr_depth 4, samples 8 ->(1,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00090, curr_depth 5, samples 7 ->(2,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.05, gain 0.00044, curr_depth 4, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00041, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.53, gain 0.00077, curr_depth 2, samples 25 ->(6,19)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00033, curr_depth 3, samples 6 ->(5,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00031, curr_depth 4, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.49, gain 0.00024, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.49, gain 0.00046, curr_depth 3, samples 19 ->(4,15)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.48, gain 0.00005, curr_depth 4, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00043, curr_depth 4, samples 15 ->(8,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00033, curr_depth 5, samples 8 ->(2,6)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00011, curr_depth 5, samples 7 ->(3,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.87, gain 0.00024, curr_depth 1, samples 25 ->(23,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.29, gain 0.00008, curr_depth 2, samples 23 ->(3,20)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00003, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00001, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00009, curr_depth 3, samples 20 ->(8,12)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00010, curr_depth 4, samples 8 ->(5,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00011, curr_depth 5, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.50, gain 0.00002, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.37, gain 0.00004, curr_depth 4, samples 12 ->(4,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00002, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.72, gain 0.00004, curr_depth 5, samples 8 ->(7,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.71, gain 0.00021, curr_depth 2, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 40[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00265, curr_depth 0, samples 66 ->(42,24)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.04, gain 0.00291, curr_depth 1, samples 42 ->(9,33)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.26, gain 0.00170, curr_depth 2, samples 9 ->(3,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.24, gain 0.00095, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.22, gain 0.00065, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00071, curr_depth 3, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.33, gain 0.00059, curr_depth 4, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.34, gain 0.00047, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.14, gain 0.00139, curr_depth 2, samples 33 ->(20,13)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.10, gain 0.00118, curr_depth 3, samples 20 ->(12,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.26, gain 0.00088, curr_depth 4, samples 12 ->(3,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.36, gain 0.00012, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.29, gain 0.00078, curr_depth 5, samples 9 ->(3,6)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.41, gain 0.00033, curr_depth 4, samples 8 ->(3,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00007, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.10, gain 0.00027, curr_depth 5, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.53, gain 0.00023, curr_depth 3, samples 13 ->(6,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00014, curr_depth 4, samples 6 ->(5,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00011, curr_depth 5, samples 5 ->(4,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00011, curr_depth 4, samples 7 ->(1,6)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00012, curr_depth 5, samples 6 ->(5,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.29, gain 0.00019, curr_depth 1, samples 24 ->(6,18)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.93, gain 0.00003, curr_depth 2, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.41, gain 0.00003, curr_depth 3, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00001, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.18, gain 0.00019, curr_depth 2, samples 18 ->(13,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00010, curr_depth 3, samples 13 ->(2,11)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00007, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.47, gain 0.00005, curr_depth 4, samples 11 ->(6,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00001, curr_depth 5, samples 6 ->(4,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.66, gain 0.00006, curr_depth 5, samples 5 ->(3,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00013, curr_depth 3, samples 5 ->(2,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00007, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00006, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.70, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 41[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.24, gain 0.00081, curr_depth 0, samples 66 ->(27,39)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.42, gain 0.00088, curr_depth 1, samples 27 ->(4,23)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.09, gain 0.00055, curr_depth 2, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.17, gain 0.00045, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00008, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00044, curr_depth 2, samples 23 ->(9,14)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00032, curr_depth 3, samples 9 ->(2,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00019, curr_depth 4, samples 7 ->(2,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00008, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00011, curr_depth 5, samples 5 ->(4,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.13, gain 0.00015, curr_depth 3, samples 14 ->(8,6)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.20, gain 0.00004, curr_depth 4, samples 8 ->(6,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00002, curr_depth 5, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.53, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.64, gain 0.00011, curr_depth 4, samples 6 ->(2,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00009, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.64, gain 0.00029, curr_depth 1, samples 39 ->(29,10)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.31, gain 0.00003, curr_depth 2, samples 29 ->(18,11)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.24, gain 0.00004, curr_depth 3, samples 18 ->(5,13)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00002, curr_depth 4, samples 5 ->(4,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.47, gain 0.00002, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00005, curr_depth 4, samples 13 ->(2,11)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00006, curr_depth 5, samples 11 ->(1,10)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (10)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.51, gain 0.00006, curr_depth 3, samples 11 ->(10,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00006, curr_depth 4, samples 10 ->(6,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00002, curr_depth 5, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00006, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00030, curr_depth 2, samples 10 ->(1,9)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.36, gain 0.00031, curr_depth 3, samples 9 ->(6,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00025, curr_depth 4, samples 6 ->(3,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.18, gain 0.00009, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00016, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00006, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.66, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 42[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.13, gain 0.00120, curr_depth 0, samples 66 ->(14,52)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00129, curr_depth 1, samples 14 ->(7,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00099, curr_depth 2, samples 7 ->(2,5)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.27, gain 0.00017, curr_depth 3, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.30, gain 0.00082, curr_depth 3, samples 5 ->(3,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.29, gain 0.00057, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.22, gain 0.00037, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.36, gain 0.00022, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.08, gain 0.00033, curr_depth 2, samples 7 ->(4,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.39, gain 0.00009, curr_depth 3, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00007, curr_depth 4, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.32, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00023, curr_depth 3, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.28, gain 0.00024, curr_depth 1, samples 52 ->(32,20)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00015, curr_depth 2, samples 32 ->(5,27)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.41, gain 0.00001, curr_depth 3, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.59, gain 0.00001, curr_depth 4, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00017, curr_depth 3, samples 27 ->(7,20)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.16, gain 0.00013, curr_depth 4, samples 7 ->(3,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.54, gain 0.00010, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.46, gain 0.00003, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00008, curr_depth 4, samples 20 ->(8,12)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.22, gain 0.00008, curr_depth 5, samples 8 ->(6,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00005, curr_depth 5, samples 12 ->(2,10)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (10)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.19, gain 0.00025, curr_depth 2, samples 20 ->(17,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.30, gain 0.00011, curr_depth 3, samples 17 ->(10,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.26, gain 0.00012, curr_depth 4, samples 10 ->(8,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.43, gain 0.00006, curr_depth 5, samples 8 ->(3,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00007, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.50, gain 0.00003, curr_depth 4, samples 7 ->(4,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.46, gain 0.00003, curr_depth 5, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.87, gain 0.00029, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00028, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [            train] [1mTree 43[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00085, curr_depth 0, samples 66 ->(12,54)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00052, curr_depth 1, samples 12 ->(5,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.23, gain 0.00043, curr_depth 2, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00024, curr_depth 3, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00018, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.36, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00013, curr_depth 2, samples 7 ->(3,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 3, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00001, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00014, curr_depth 3, samples 4 ->(3,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00014, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.35, gain 0.00049, curr_depth 1, samples 54 ->(28,26)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00010, curr_depth 2, samples 28 ->(6,22)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00002, curr_depth 3, samples 6 ->(4,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00001, curr_depth 4, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00012, curr_depth 3, samples 22 ->(6,16)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.08, gain 0.00006, curr_depth 4, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00001, curr_depth 5, samples 5 ->(1,4)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.52, gain 0.00013, curr_depth 4, samples 16 ->(7,9)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00003, curr_depth 5, samples 7 ->(6,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00011, curr_depth 5, samples 9 ->(1,8)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.31, gain 0.00056, curr_depth 2, samples 26 ->(12,14)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00055, curr_depth 3, samples 12 ->(1,11)
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.40, gain 0.00041, curr_depth 4, samples 11 ->(7,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.19, gain 0.00015, curr_depth 5, samples 7 ->(6,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00029, curr_depth 5, samples 4 ->(3,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.64, gain 0.00011, curr_depth 3, samples 14 ->(6,8)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.17, gain 0.00001, curr_depth 4, samples 6 ->(3,3)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00011, curr_depth 4, samples 8 ->(1,7)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.40, gain 0.00011, curr_depth 5, samples 7 ->(5,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:10] [debug] [            train] [1mTree 44[0m: receives pb 0.10 and will train on 66 instances
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.55, gain 0.00158, curr_depth 0, samples 66 ->(18,48)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.31, gain 0.00148, curr_depth 1, samples 18 ->(4,14)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.20, gain 0.00088, curr_depth 2, samples 4 ->(1,3)
[10:03:10] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00049, curr_depth 3, samples 3 ->(2,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00037, curr_depth 4, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.07, gain 0.00068, curr_depth 2, samples 14 ->(7,7)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.36, gain 0.00054, curr_depth 3, samples 7 ->(3,4)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.32, gain 0.00018, curr_depth 4, samples 3 ->(1,2)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.40, gain 0.00035, curr_depth 4, samples 4 ->(2,2)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.43, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00014, curr_depth 3, samples 7 ->(6,1)
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00014, curr_depth 4, samples 6 ->(1,5)
[10:03:10] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:10] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00011, curr_depth 5, samples 5 ->(4,1)
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:10] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:10] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.53, gain 0.00071, curr_depth 1, samples 48 ->(31,17)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00005, curr_depth 2, samples 31 ->(25,6)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.42, gain 0.00006, curr_depth 3, samples 25 ->(8,17)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00011, curr_depth 4, samples 8 ->(6,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.14, gain 0.00001, curr_depth 5, samples 6 ->(4,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.18, gain 0.00004, curr_depth 4, samples 17 ->(7,10)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.26, gain 0.00002, curr_depth 5, samples 7 ->(4,3)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00005, curr_depth 5, samples 10 ->(9,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00006, curr_depth 3, samples 6 ->(3,3)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00001, curr_depth 4, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00007, curr_depth 4, samples 3 ->(2,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00007, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.48, gain 0.00077, curr_depth 2, samples 17 ->(10,7)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00025, curr_depth 3, samples 10 ->(3,7)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00002, curr_depth 4, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.45, gain 0.00025, curr_depth 4, samples 7 ->(6,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.46, gain 0.00026, curr_depth 5, samples 6 ->(5,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.20, gain 0.00057, curr_depth 3, samples 7 ->(6,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.52, gain 0.00056, curr_depth 4, samples 6 ->(2,4)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.67, gain 0.00028, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.47, gain 0.00027, curr_depth 5, samples 4 ->(3,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [            train] [1mTree 45[0m: receives pb 0.10 and will train on 66 instances
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00198, curr_depth 0, samples 66 ->(18,48)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.08, gain 0.00103, curr_depth 1, samples 18 ->(3,15)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00058, curr_depth 2, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.17, gain 0.00045, curr_depth 3, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.09, gain 0.00051, curr_depth 2, samples 15 ->(13,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.18, gain 0.00053, curr_depth 3, samples 13 ->(1,12)
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00056, curr_depth 4, samples 12 ->(6,6)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00046, curr_depth 5, samples 6 ->(2,4)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.15, gain 0.00015, curr_depth 5, samples 6 ->(1,5)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00004, curr_depth 3, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.43, gain 0.00168, curr_depth 1, samples 48 ->(43,5)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00085, curr_depth 2, samples 43 ->(21,22)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.29, gain 0.00029, curr_depth 3, samples 21 ->(11,10)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00045, curr_depth 4, samples 11 ->(7,4)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00055, curr_depth 5, samples 7 ->(1,6)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00005, curr_depth 5, samples 4 ->(2,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00009, curr_depth 4, samples 10 ->(3,7)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00007, curr_depth 5, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.36, gain 0.00003, curr_depth 5, samples 7 ->(1,6)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.17, gain 0.00152, curr_depth 3, samples 22 ->(2,20)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00114, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.36, gain 0.00050, curr_depth 4, samples 20 ->(10,10)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.43, gain 0.00071, curr_depth 5, samples 10 ->(6,4)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.30, gain 0.00015, curr_depth 5, samples 10 ->(3,7)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.68, gain 0.00133, curr_depth 2, samples 5 ->(4,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.42, gain 0.00138, curr_depth 3, samples 4 ->(2,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00099, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00034, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:11] [debug] [            train] [1mTree 46[0m: receives pb 0.10 and will train on 66 instances
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00670, curr_depth 0, samples 66 ->(33,33)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.04, gain 0.00135, curr_depth 1, samples 33 ->(7,26)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.08, gain 0.00139, curr_depth 2, samples 7 ->(6,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.01, gain 0.00137, curr_depth 3, samples 6 ->(3,3)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00084, curr_depth 4, samples 3 ->(2,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.14, gain 0.00054, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.06, gain 0.00049, curr_depth 4, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.23, gain 0.00037, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.17, gain 0.00040, curr_depth 2, samples 26 ->(16,10)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00012, curr_depth 3, samples 16 ->(14,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.08, gain 0.00015, curr_depth 4, samples 14 ->(2,12)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00005, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00018, curr_depth 5, samples 12 ->(3,9)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (9)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00011, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.53, gain 0.00039, curr_depth 3, samples 10 ->(6,4)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.37, gain 0.00035, curr_depth 4, samples 6 ->(1,5)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.24, gain 0.00034, curr_depth 5, samples 5 ->(2,3)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00007, curr_depth 4, samples 4 ->(3,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00002, curr_depth 5, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00686, curr_depth 1, samples 33 ->(16,17)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00218, curr_depth 2, samples 16 ->(6,10)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.28, gain 0.00038, curr_depth 3, samples 6 ->(4,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.71, gain 0.00005, curr_depth 4, samples 4 ->(1,3)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.88, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.50, gain 0.00036, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.25, gain 0.00219, curr_depth 3, samples 10 ->(8,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.20, gain 0.00122, curr_depth 4, samples 8 ->(6,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00126, curr_depth 5, samples 6 ->(3,3)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.52, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00114, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00519, curr_depth 2, samples 17 ->(9,8)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.65, gain 0.00406, curr_depth 3, samples 9 ->(8,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.34, gain 0.00311, curr_depth 4, samples 8 ->(4,4)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.49, gain 0.00241, curr_depth 5, samples 4 ->(3,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.60, gain 0.00081, curr_depth 5, samples 4 ->(2,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.41, gain 0.00156, curr_depth 3, samples 8 ->(3,5)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.57, gain 0.00125, curr_depth 4, samples 3 ->(2,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00085, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.20, gain 0.00033, curr_depth 4, samples 5 ->(4,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00035, curr_depth 5, samples 4 ->(1,3)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [            train] [1mTree 47[0m: receives pb 0.10 and will train on 66 instances
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00357, curr_depth 0, samples 66 ->(29,37)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.18, gain 0.00321, curr_depth 1, samples 29 ->(18,11)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.27, gain 0.00272, curr_depth 2, samples 18 ->(5,13)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.19, gain 0.00106, curr_depth 3, samples 5 ->(1,4)
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.23, gain 0.00078, curr_depth 4, samples 4 ->(1,3)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.19, gain 0.00065, curr_depth 5, samples 3 ->(2,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00164, curr_depth 3, samples 13 ->(12,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.40, gain 0.00152, curr_depth 4, samples 12 ->(11,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.38, gain 0.00139, curr_depth 5, samples 11 ->(10,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (10)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.60, gain 0.00054, curr_depth 2, samples 11 ->(9,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00033, curr_depth 3, samples 9 ->(5,4)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.32, gain 0.00027, curr_depth 4, samples 5 ->(1,4)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00024, curr_depth 5, samples 4 ->(1,3)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.49, gain 0.00007, curr_depth 4, samples 4 ->(2,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.47, gain 0.00004, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.49, gain 0.00002, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.48, gain 0.00022, curr_depth 3, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.18, gain 0.00114, curr_depth 1, samples 37 ->(7,30)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.26, gain 0.00024, curr_depth 2, samples 7 ->(4,3)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00006, curr_depth 3, samples 4 ->(2,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.35, gain 0.00002, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.38, gain 0.00023, curr_depth 3, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.56, gain 0.00197, curr_depth 2, samples 30 ->(13,17)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.27, gain 0.00222, curr_depth 3, samples 13 ->(10,3)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.37, gain 0.00102, curr_depth 4, samples 10 ->(1,9)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.43, gain 0.00072, curr_depth 5, samples 9 ->(8,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (8)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.99, gain 0.00140, curr_depth 4, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00043, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.18, gain 0.00019, curr_depth 3, samples 17 ->(7,10)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.45, gain 0.00013, curr_depth 4, samples 7 ->(1,6)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.51, gain 0.00003, curr_depth 5, samples 6 ->(5,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.23, gain 0.00014, curr_depth 4, samples 10 ->(9,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.38, gain 0.00010, curr_depth 5, samples 9 ->(5,4)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [            train] [1mTree 48[0m: receives pb 0.10 and will train on 66 instances
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.51, gain 0.00106, curr_depth 0, samples 66 ->(18,48)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.41, gain 0.00108, curr_depth 1, samples 18 ->(9,9)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.30, gain 0.00084, curr_depth 2, samples 9 ->(7,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.08, gain 0.00071, curr_depth 3, samples 7 ->(3,4)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.28, gain 0.00035, curr_depth 4, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.33, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 0.20, gain 0.00035, curr_depth 4, samples 4 ->(2,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.33, gain 0.00012, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.37, gain 0.00022, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.40, gain 0.00012, curr_depth 3, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.44, gain 0.00025, curr_depth 2, samples 9 ->(3,6)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.42, gain 0.00014, curr_depth 3, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.32, gain 0.00012, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.21, gain 0.00013, curr_depth 3, samples 6 ->(2,4)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00002, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.39, gain 0.00013, curr_depth 4, samples 4 ->(3,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00007, curr_depth 5, samples 3 ->(2,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.38, gain 0.00016, curr_depth 1, samples 48 ->(39,9)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.22, gain 0.00009, curr_depth 2, samples 39 ->(21,18)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.12, gain 0.00018, curr_depth 3, samples 21 ->(19,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.12, gain 0.00006, curr_depth 4, samples 19 ->(3,16)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00007, curr_depth 5, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00006, curr_depth 5, samples 16 ->(2,14)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (14)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00016, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.25, gain 0.00005, curr_depth 3, samples 18 ->(5,13)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.60, gain 0.00007, curr_depth 4, samples 5 ->(3,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00007, curr_depth 5, samples 3 ->(2,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.61, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 5, val 0.55, gain 0.00004, curr_depth 4, samples 13 ->(8,5)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00003, curr_depth 5, samples 8 ->(2,6)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00003, curr_depth 5, samples 5 ->(4,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.62, gain 0.00019, curr_depth 2, samples 9 ->(1,8)
[10:03:11] [debug] [    make_tree_DFS] max_depth (3) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.55, gain 0.00009, curr_depth 3, samples 8 ->(6,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.16, gain 0.00010, curr_depth 4, samples 6 ->(1,5)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.64, gain 0.00010, curr_depth 5, samples 5 ->(1,4)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.69, gain 0.00000, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [            train] [1mTree 49[0m: receives pb 0.10 and will train on 66 instances
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.22, gain 0.00070, curr_depth 0, samples 66 ->(22,44)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.30, gain 0.00074, curr_depth 1, samples 22 ->(1,21)
[10:03:11] [debug] [    make_tree_DFS] max_depth (2) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.14, gain 0.00050, curr_depth 2, samples 21 ->(6,15)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.35, gain 0.00029, curr_depth 3, samples 6 ->(4,2)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00024, curr_depth 4, samples 4 ->(3,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.42, gain 0.00018, curr_depth 5, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00004, curr_depth 4, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 2.00, gain 0.00022, curr_depth 3, samples 15 ->(1,14)
[10:03:11] [debug] [    make_tree_DFS] max_depth (4) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.46, gain 0.00022, curr_depth 4, samples 14 ->(1,13)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 7, val 0.18, gain 0.00023, curr_depth 5, samples 13 ->(6,7)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (6)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (7)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.48, gain 0.00015, curr_depth 1, samples 44 ->(24,20)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.18, gain 0.00006, curr_depth 2, samples 24 ->(9,15)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00006, curr_depth 3, samples 9 ->(6,3)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.14, gain 0.00006, curr_depth 4, samples 6 ->(3,3)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00006, curr_depth 5, samples 3 ->(2,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 4, samples 3 ->(2,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.55, gain 0.00000, curr_depth 5, samples 2 ->(1,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.23, gain 0.00007, curr_depth 3, samples 15 ->(6,9)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.45, gain 0.00008, curr_depth 4, samples 6 ->(3,3)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00007, curr_depth 5, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 3.00, gain 0.00001, curr_depth 5, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.42, gain 0.00003, curr_depth 4, samples 9 ->(3,6)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00001, curr_depth 5, samples 3 ->(2,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.27, gain 0.00004, curr_depth 5, samples 6 ->(4,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (4)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.63, gain 0.00024, curr_depth 2, samples 20 ->(9,11)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.29, gain 0.00027, curr_depth 3, samples 9 ->(5,4)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 4, val 1.24, gain 0.00008, curr_depth 4, samples 5 ->(4,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.58, gain 0.00008, curr_depth 5, samples 4 ->(1,3)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (3)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.49, gain 0.00023, curr_depth 4, samples 4 ->(1,3)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 2, val 0.50, gain 0.00021, curr_depth 5, samples 3 ->(2,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 6, val 0.35, gain 0.00006, curr_depth 3, samples 11 ->(7,4)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.15, gain 0.00004, curr_depth 4, samples 7 ->(1,6)
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 1, val 0.68, gain 0.00002, curr_depth 5, samples 6 ->(5,1)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (5)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 3, val 0.20, gain 0.00006, curr_depth 4, samples 4 ->(3,1)
[10:03:11] [debug] [  find_best_split] Using 0.0083 budget for internal leaf nodes
[10:03:11] [debug] [    make_tree_DFS] DFS: best split @ 0, val 1.00, gain 0.00006, curr_depth 5, samples 3 ->(1,2)
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (1)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (6) or min_samples (2)-> leaf
[10:03:11] [debug] [    make_tree_DFS] max_depth (5) or min_samples (1)-> leaf
[10:03:11] [ info] [             main] hello MA end
